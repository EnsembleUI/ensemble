{
  "$id": "https://ensembleui.com/theme.schema.json",
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "Theme",
  "type": "object",
  "properties": {
    "material3": {
      "type": "boolean",
      "description": "If set true, material3 will be applied else material2"
    },
    "Text": {
      "type": "object",
      "properties": {
        "fontFamily": { "type": "string" },
        "displayLarge": { "$ref":  "#/$defs/TextStyle" },
        "displayMedium": { "$ref":  "#/$defs/TextStyle" },
        "displaySmall": { "$ref":  "#/$defs/TextStyle" },
        "headlineLarge": { "$ref":  "#/$defs/TextStyle" },
        "headlineMedium": { "$ref":  "#/$defs/TextStyle" },
        "headlineSmall": { "$ref":  "#/$defs/TextStyle" },
        "titleLarge": { "$ref":  "#/$defs/TextStyle" },
        "titleMedium": { "$ref":  "#/$defs/TextStyle" },
        "titleSmall": { "$ref":  "#/$defs/TextStyle" },
        "bodyLarge": { "$ref":  "#/$defs/TextStyle" },
        "bodyMedium": { "$ref":  "#/$defs/TextStyle" },
        "bodySmall": { "$ref":  "#/$defs/TextStyle" },
        "labelLarge": { "$ref":  "#/$defs/TextStyle" },
        "labelMedium": { "$ref":  "#/$defs/TextStyle" },
        "labelSmall": { "$ref":  "#/$defs/TextStyle" }
      }
    },
    "Colors": {
      "type": "object",
      "properties": {
        "seed": {
          "$ref": "#/$defs/Color",
          "description": "Generate color schema based on seed color."
        },
        "primary": {
          "$ref": "#/$defs/Color",
          "description": "Primary color of your App (e.g button color, focus color, ...)"
        },
        "onPrimary": {
          "$ref": "#/$defs/Color",
          "description": "The color overlay on top of your primary color (e.g button text)"
        },
        "secondary": {
          "$ref": "#/$defs/Color",
          "description": "The Secondary color of your App"
        },
        "onSecondary": {
          "$ref": "#/$defs/Color",
          "description": "The color overlay on top of your secondary color"
        },
        "disabled": {
          "$ref": "#/$defs/Color",
          "description": "Color when a widget is disabled"
        }
      }
    },
    "Screen": {
      "type": "object",
      "properties": {
        "backgroundColor": {
          "$ref": "#/$defs/Color",
          "description": "The default background color for all the screens"
        },
        "loadingBackgroundColor": {
          "$ref": "#/$defs/Color",
          "description": "The background color while a screen is loading"
        },
        "Header": {
          "type": "object",
          "properties": {
            "color": {
              "$ref": "#/$defs/Color",
              "description": "The default color for the header's title and icons"
            },
            "backgroundColor": {
              "$ref": "#/$defs/Color",
              "description": "The default background color for all the screens' headers"
            },
            "surfaceTintColor": {
              "$ref": "#/$defs/Color",
              "description": "Apply a colored tint overlay to all the screens' headers when elevation is set or in scrolled state"
            },
            "titleTextStyle": {
              "$ref":  "#/$defs/TextStyle",
              "description": "Update the styling for the header's title text"
            }
          }
        }

      }
    },
    "Widgets": {
      "type": "object",
      "properties": {
        "Input": { "$ref": "#/$defs/Input-theme" },
        "Button": { "$ref": "#/$defs/Button-theme" },
        "Checkbox": { "$ref": "#/$defs/Checkbox-theme" }
      }
    },
    "Transitions": {
      "type": "object",
      "properties": {
        "page": {
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/$defs/PageTransitionType"
            },
            "alignment": {
              "$ref": "#/$defs/alignment"
            },
            "duration": {
              "type": "number",
              "minimum": 0
            }
          },
          "required": ["type"]
        },
        "modal": {
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/$defs/PageTransitionType"
            },
            "duration": {
              "type": "number"
            }
          },
          "required": ["type"]
        }
      }
    }
  },
  "$defs": {
    "Color": {
      "anyOf": [
        {
          "type": "integer"
        },
        {
          "type": "string",
          "enum": ["transparent", "black", "blue", "white", "red", "grey", "teal", "amber", "pink", "purple", "yellow", "green", "brown", "cyan", "indigo", "lime", "orange"]
        },
        {
          "type": "string",
          "pattern": "^0x"
        }
      ]
    },
    "Input-theme": {
      "type": "object",
      "properties": {
        "variant": {
          "type": "string",
          "description": "Select a pre-defined look and feel for Input widgets",
          "oneOf": [
            {
              "const": "underline",
              "description": "draw an Underline below applicable input widgets (default)"
            },
            {
              "const": "box",
              "description": "draw a Box border around applicable input widgets"
            }
          ]
        },
        "fillColor": {
          "$ref": "#/$defs/Color",
          "description": "The fill color for applicable input fields (TextInput, Dropdown, ...)"
        },
        "borderRadius": {
          "type": "integer",
          "minimum": 0,
          "description": "The border radius for applicable Input widgets."
        },
        "borderWidth": {
          "type": "integer",
          "minimum": 0,
          "description": "The border width for applicable Input widgets."
        },
        "borderColor": {
          "$ref": "#/$defs/Color",
          "description": "The base border color for applicable input fields. This border color determines the look and feel of your inputs, while the other colors are overrides for different states."
        },
        "disabledBorderColor": {
          "$ref": "#/$defs/Color",
          "description": "The border color when input fields are disabled."
        },
        "errorBorderColor": {
          "$ref": "#/$defs/Color",
          "description": "The border color when there are errors on the input fields."
        },
        "focusedBorderColor": {
          "$ref": "#/$defs/Color",
          "description": "The border color of the input field when it is receiving focus"
        },
        "focusedErrorBorderColor": {
          "$ref": "#/$defs/Color",
          "description": "The border color of the input field when it is receiving focus in its error state."
        },
        "hintStyle": {
          "$ref": "#/$defs/TextStyle"
        }
      }
    },
    "Button-theme": {
      "type": "object",
      "properties": {
        "borderRadius": {
          "type": "integer",
          "minimum": 0
        },
        "borderWidth": {
          "type": "integer",
          "minimum": 0,
          "description": "The border thickness of the button"
        },
        "borderColor": {
          "$ref": "#/$defs/Color"
        },
        "color": {
          "$ref": "#/$defs/Color",
          "description": "The text color of the button"
        },
        "backgroundColor": {
          "$ref": "#/$defs/Color",
          "description": "background color for solid button, but also acts as the border color for outline button"
        },
        "padding": {
          "type": ["integer", "string"],
          "description": "Button padding in CSS-style notation e.g. padding: 5 20 5"
        }
      }
    },
    "Checkbox-theme": {
      "type": "object",
      "properties": {
        "size": {
          "type": "integer",
          "description": "Adjust the size (width/height) of the checkbox",
          "minimum": 0
        },
        "borderRadius": {
          "$ref": "#/$defs/BorderRadius",
          "description": "The border radius for this Input widget. This property can be defined in the theme to apply to all Input widgets."
        },
        "borderWidth": {
          "type": "integer",
          "description": "The border width for this Input widget. This property can be defined in the theme to apply to all Input widgets.",
          "minimum": 0
        },
        "borderColor": {
          "$ref": "#/$defs/Color",
          "description": "The border color for this input widget. This property can be defined in the theme to apply to all Input widgets."
        },
        "fillColor": {
          "$ref": "#/$defs/Color",
          "description": "The fill color for this input field. This property can be defined in the theme to apply to all Input widgets."
        },
        "activeColor": {
          "$ref": "#/$defs/Color",
          "description": "The background color of the checkbox when selected"
        },
        "checkColor": {
          "$ref": "#/$defs/Color",
          "description": "The color of the check icon"
        }
      }
    },
    "alignment": {
      "type": "string",
      "enum": ["topLeft", "topCenter", "topRight", "centerLeft", "center", "centerRight", "bottomLeft", "bottomCenter", "bottomRight"]
    },
    "PageTransitionType": {
      "type": "string",
      "enum": [ "fade","rightToLeft","leftToRight","topToBottom","bottomToTop","scale","rotate","size","rightToLeftWithFade","leftToRightWithFade","leftToRightPop","rightToLeftPop","topToBottomPop","bottomToTopPop"]
    },






    "TextStyle": {
      "type": "object",
      "properties": {
        "fontFamily": {
          "type": "string"
        },
        "fontSize": {
          "type": "integer",
          "minimum": 1,
          "maximum": 1000
        },
        "lineHeightMultiple": {
          "type": "number",
          "description": "A multiple of the fontSize to determine the line height. (e.g. 2.0 means the line height is double the height the font size occupies). Default null. (note that 1.0 is not the default depending on the font)"
        },
        "fontWeight": {
          "$ref": "#/$defs/type-fontWeight"
        },
        "isItalic": {
          "type": "boolean"
        },
        "color": {
          "$ref": "#/$defs/type-color"
        },
        "backgroundColor": {
          "$ref": "#/$defs/type-color"
        },
        "gradient": {
          "type": "object",
          "properties": {
            "colors": {
              "type": "array",
              "description": "The list of colors used for the gradient",
              "items": {
                "$ref": "#/$defs/type-color"
              }
            },
            "stops": {
              "type": "array",
              "description": "The list of color stops, each is a number between 0.0 (where the gradient starts) and 1.0 (where the gradient ends). The number of stops should match the number of colors.",
              "items": {
                "type": "number",
                "minimum": 0.0,
                "maximum": 1.0
              }
            },
            "start": {
              "description": "The starting position of the gradient",
              "$ref": "#/$defs/type-alignment"
            },
            "end": {
              "description": "The ending position of the gradient",
              "$ref": "#/$defs/type-alignment"
            }
          }
        },
        "decoration": {
          "type": "string",
          "enum": [
            "none",
            "lineThrough",
            "underline",
            "overline"
          ]
        },
        "decorationStyle": {
          "type": "string",
          "enum": [
            "solid",
            "double",
            "dotted",
            "dashed",
            "wavy"
          ],
          "description": "The style of the decoration (ignored if decoration=none)"
        },
        "overflow": {
          "type": "string",
          "description": "Set treatment of text longer than available space",
          "enum": [
            "clip",
            "fade",
            "ellipsis",
            "visible"
          ]
        },
        "letterSpacing": {
          "type": "integer"
        },
        "wordSpacing": {
          "type": "integer"
        }
      }
    },
    "BorderRadius": {
      "anyOf": [
        {
          "$ref": "#/$defs/positiveInteger"
        },
        {
          "type": "string"
        }
      ],
      "description": "Border Radius with CSS-like notation (1 to 4 integers)",
      "uiType": "borderRadius"
    },
    "positiveInteger": {
      "type": "integer",
      "minimum": 0
    },
    "type-fontWeight": {
      "type": "string",
      "enum": [
        "light",
        "normal",
        "bold",
        "w100",
        "w200",
        "w300",
        "w400",
        "w500",
        "w600",
        "w700",
        "w800",
        "w900"
      ]
    },
    "type-color": {
      "oneOf": [
        {
          "title": "number",
          "type": "integer"
        },
        {
          "title": "name",
          "type": "string",
          "additionalProperties": true,
          "enum": [
            "transparent",
            "black",
            "blue",
            "white",
            "red",
            "grey",
            "teal",
            "amber",
            "pink",
            "purple",
            "yellow",
            "green",
            "brown",
            "cyan",
            "indigo",
            "lime",
            "orange"
          ]
        },
        {
          "title": "hexadecimal",
          "type": "string",
          "pattern": "^0x"
        }
      ]
    },
    "type-alignment": {
      "type": "string",
      "enum": [
        "topLeft",
        "topCenter",
        "topRight",
        "centerLeft",
        "center",
        "centerRight",
        "bottomLeft",
        "bottomCenter",
        "bottomRight"
      ]
    }
    
    
    
    

  }
}