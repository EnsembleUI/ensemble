definitions:
  from: ensemble
  ensemble:
    appId: {{ app_id }}

services:
  # Social sign-in
  signIn:
    serverUri:

    providers:
      # replace with your clientId
      google:
        iOSClientId: "{{ ios_client_id }}"
        androidClientId: "{{ android_client_id }}"
        webClientId: "{{ web_client_id }}"
        serverClientId: "{{ server_client_id }}"

  # Built-in API authorization. Override these callbacks in your Starter App.
  # You may use https redirect (Universal Links) or custom scheme redirects.
  # If using https redirect, redirectScheme should be empty
  apiAuthorization:
    # replace this with your server (TODO: provide documentation)
    tokenExchangeServer: https://us-central1-ensemble-web-studio.cloudfunctions.net/oauth-gettoken

    providers:
      google:
        clientId: 326748243798-btoriljk7i7sgsr9mvas90b0gn9vfebm.apps.googleusercontent.com
        redirectUri: https://app.ensembleui.com/oauth-starter
        redirectScheme:
      microsoft:
        clientId: 36501417-8ad8-4885-82eb-232f345524ac
        redirectUri: msauth.com.ensembleui.starter://auth
        redirectScheme: msauth.com.ensembleui.starter

# Legacy Maps, replace with your own keys
accounts:
  maps:
    mapbox_access_token: pk.eyJ1IjoiZW5zZW1ibGV1aSIsImEiOiJjbDVsYTNoeDQwaGQwM21udzhyemR3cDJrIn0.dnn3x8nZVj5ZFO3tn5l8Ww

# override any environment variables on studio.ensembleui.com here
# e.g. load local assets instead of URL
environmentVariables:
  # Environment variables can have any value you want and are referenced by {env.myVariable}.
  # Here we use it to demonstrate loading assets locally, overriding the environment variables
  # defined in your App on studio.ensembleui.com.
  # This asset value is empty, meaning a reference of {env.exampleAssetVariable}pic.png
  # will be loaded locally from /ensemble/assets/pic.png
  assets: ""
