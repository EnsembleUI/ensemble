definitions:
  # where your page definitions are hosted ('local', 'remote' or 'ensemble')
  from: ensemble

  # for embedding definitions locally in your Flutter App
  local:
    # the root directory where all your Apps definitions reside
    path: ensemble/apps/
    # appId represents an App, and is a folder under the root directory
    # Note that each App directory also has to be added manually under pubspec.yaml
    appId: helloApp
    # appHome is the name of the home screen. This will be the first screen when your App loads
    appHome: Hello Home
    #folder that contains the translated strings for all locales
    i18nPath: ensemble/i18n

  # for hosting definitions on your own server
  remote:
    # the path to your app on your remote server. For example - http://localhost:8000/
    path: <your_http_server_hosting_the_definitions>
    appId: helloApp
    appHome: Hello Home
    # path to your i18n (translation files) dir. If you are not using translations, just point to the one that comes with this repo. Example - http://localhost:8000/i18n 
    i18nPath: <full_url_including_scheme_and_host_to_i18n_directory_on_your_server>

  # for Ensemble-hosted definitions, simply enter your Ensemble's app key
  ensemble:
    # appId can be found on Ensemble Studio. Navigate to your app, click the menu icon on top right, and copy your appId
    # here is the appId for Ensemble Kitchen sink. You can view this app under demo apps in studio.
    appId: e24402cb-75e2-404c-866c-29e6c3dd7992
    i18nPath: https://raw.githubusercontent.com/EnsembleUI/starter/main/ensemble/i18n

i18n:
  #locale string e.g. en, nl etc. If empty, user's device locale is used
  defaultLocale: en
  #if strings in defaultLocale are not found, which locale to use instead
  fallbackLocale: nl
  #use country code after locale code such as en_us
  useCountryCode: false

services:
  # Social sign-in
  signIn:
    serverUri:

    providers:

      # replace with your clientId
      google:
        iOSClientId: 126811761383-8idgi6nkva2tb33j42l5vpqu3jli6eak.apps.googleusercontent.com
        androidClientId: 126811761383-pm0dlhb9fb8svso7f9bapv3fojmncvfo.apps.googleusercontent.com
        webClientId: 126811761383-3k0ojg0tbuslc1pbhh0vllu1orbr3aml.apps.googleusercontent.com
        serverClientId: 126811761383-5grp0akbag9aam2nl0r7j5j6u77l39eb.apps.googleusercontent.com


  # Built-in API authorization. Override these callbacks in your Starter App.
  # You may use https redirect (Universal Links) or custom scheme redirects.
  # If using https redirect, redirectScheme should be empty
  apiAuthorization:
    # replace this with your server (TODO: provide documentation)
    tokenExchangeServer: https://us-central1-ensemble-web-studio.cloudfunctions.net/oauth-gettoken

    providers:
      google:
        clientId: 326748243798-btoriljk7i7sgsr9mvas90b0gn9vfebm.apps.googleusercontent.com
        redirectUri: https://app.ensembleui.com/oauth-starter
        redirectScheme:
      microsoft:
        clientId: 36501417-8ad8-4885-82eb-232f345524ac
        redirectUri: msauth.com.ensembleui.starter://auth
        redirectScheme: msauth.com.ensembleui.starter


# override any environment variables on studio.ensembleui.com here
# e.g. load local assets instead of URL
environmentVariables:
  # Environment variables can have any value you want and are referenced by {env.myVariable}.
  # Here we use it to demonstrate loading assets locally, overriding the environment variables
  # defined in your App on studio.ensembleui.com.
  # This asset value is empty, meaning a reference of {env.exampleAssetVariable}pic.png
  # will be loaded locally from /ensemble/assets/pic.png
  exampleAssetVariable:

# uncomment the following when using firebase analytics.
# For iOS - Make sure that GoogleService-Info.plist is placed under the ios/Runner folder AND has been added to the Xcode project. Just putting the file under Runner folder is NOT sufficient, it has to be added to the prject using Xcode.
# For Android - Make sure that google-services.json is placed under android/app folder
# For Web - make sure that the web config is present under account/firebase/web below.
#analytics:
#  provider: firebase
#  enabled: true
#  enableConsoleLogs: true
# uncomment the following when using Firebase analytics for the Web and replace the values with the values from your Firebase app.
#accounts:
#  firebase:
#    web:
#      apiKey: "xxxxx"
#      authDomain: "xxxxx"
#      projectId: "xxxx"
#      storageBucket: "xxxxx"
#      messagingSenderId: "nnnnnn"
#      appId: "n:xxxxxxx"
#      measurementId: "G-xxxxx"